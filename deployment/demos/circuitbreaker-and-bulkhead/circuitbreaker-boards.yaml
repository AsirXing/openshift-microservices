# A Circuit breaker implementation that tracks the status of each individual
# host in the upstream service. Applicable to both HTTP and TCP services. 
# For HTTP services, hosts that continually return 5xx errors for API calls 
# are ejected from the pool for a pre-defined period of time. For TCP services,
# connection timeouts or connection failures to a given host counts as an error
# when measuring the consecutive errors metric. See Envoyâ€™s outlier detection
# for more details.
#
# The following rule sets a connection pool size of 2 connections and 3 
# concurrent HTTP2 requests, with no more than 2 req/connection to "boards" 
# service.
# 
# Note: we are making these numbers a bit small for demo purposes
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: boards
spec:
  host: boards
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 2
      http:
        http2MaxRequests: 3
        http1MaxPendingRequests: 3
        maxRequestsPerConnection: 2
---
# Configures upstream hosts to be scanned every 30 seconds, such that any host that 
# fails 1 consecutive times with an error code will be ejected for 5 minutes.
#     
# Number of errors before a host is ejected from the connection pool. When the 
# upstream host is accessed over HTTP, a 502, 503 or 504 return code qualifies as an error.
# 
# When the upstream host is accessed over an opaque TCP connection, connect timeouts and 
# connection error/failure events qualify as an error.
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: app-ui
spec:
  host: app-ui
  trafficPolicy:
    outlierDetection:
      consecutiveErrors: 1
      interval: 30s
      baseEjectionTime: 5m
      maxEjectionPercent: 100
